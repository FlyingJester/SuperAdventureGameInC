import os
import sys

# Import the environment from the calling build script
Import("environment turbojson use_audio")

# Create an array of source file names to compile
source = ["Lya.c", "Map.c"]

libs = [
    "SDL2",
    "SDL2_image",
    "m",
    turbojson    
]

# Determine which bufferfile implementation to use
l_env = environment.Clone()
configure = Configure(l_env)
if os.name != "nt" and configure.CheckCHeader("sys/mman.h"):
    source.append("bufferfile_mmap.c")
elif os.name != "nt" and configure.CheckCHeader("unistd.h") and configure.CheckCHeader("sys/stat.h"):
    source.append("bufferfile_unix.c")
else:
    source.append("bufferfile_c.c")
l_env = configure.Finish()

build_env = environment.Clone()
if use_audio:
    libs += ["ogg", "opus", "openal"]
    build_env.Append(CPPDEFINES="AUDIO=1")
    source += ["Audio.c"]

if os.name == "nt" or "msys" in sys.platform:
    build_env.Append(LINKFLAGS="-mconsole")

# Build a program using the environment. The first argument is the name of the program to build.
build_env.Program("adventure", source, LIBS = libs)
